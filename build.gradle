buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
  }
}

version "1.2.4"
group "org.grails.plugins"

apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
  mavenLocal()
  maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-dependencies"
  compile "org.grails:grails-web-boot"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:scaffolding"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web-plugin:3.1.6"
  provided "org.grails:grails-plugin-services"
  provided "org.grails:grails-plugin-domain-class"
//  runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
  testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
  compile 'net.spy:spymemcached:2.12.3', {
    exclude group:"log4j", module:"log4j"
    exclude group:"org.slf4j", module:"slf4j-api"
    exclude group:"org.springframework", module:"spring-beans"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
}


publishing {
  publications {
    mavenJar(MavenPublication) {
      pom.withXml {
        def pomNode = asNode()
        pomNode.dependencyManagement.replaceNode {}

        // simply remove dependencies without a version
        // version-less dependencies are handled with dependencyManagement
        // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
        pomNode.dependencies.dependency.findAll {
          it.version.text().isEmpty()
        }.each {
          it.replaceNode {}
        }
      }
      from components.java
//            artifact (sourceJar) { // (2)
//                classifier = 'sources'
//            }
    }
  }
  repositories {
    maven {
      credentials {
        // todo
      }
    }
  }
}

// publish by grails publish-plugin


grailsPublish {
    user = ''
    key = ''
    githubSlug = 'purpleraven/grails-memcached-web-plugin'

    license {
        name = 'Apache-2.0'
    }
    title = "Memcached web Plugin"
    desc = "Store pages of page fragments in memcached"
    developers = [johndoe:"John Doe"]
    portalUser = ""
    portalPassword = ""
}
